@model Ecommerce.Web.ViewModel.OrderDetailsViewModel

@if (Model != null & Model.Order != null)
{
    var i = 1;
    var ProductQuantity = 0;
    <div class="page-title parallax parallax1">
        <div class="container">
            <div class="row">
                <div class="col-md-4 order-md-2 mb-4">
                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Your cart</span>
                    </h4>
                    <ul class="list-group mb-3">
                        @foreach (var Order in Model.Order.OrderItems)
                        {
                            <li class="list-group-item d-flex justify-content-between lh-condensed" data-id="@Order.Product.ID">
                                <div>
                                    <h6 class="my-0">@i - @Order.Product.Name - Quantity: @Order.Quantity</h6>
                                    <small class="text-muted">@(Order.Product.Description.Length > 100 ? Order.Product.Description.Substring(0,35) : Order.Product.Description)</small>
                                </div>
                                <span class="text-muted">$@Order.Product.Price</span>
                            </li>
                            i++;
                        }
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Total (USD)</span>
                          
                            <strong>$ @Model.Order.TotalAmount</strong>
                        </li>
                    </ul>

                    <form class="card p-2">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Promo code">
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-secondary">Redeem</button>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="col-md-8 order-md-1">
                    <h4 class="mb-3">Billing address</h4>
                    <form class="needs-validation" novalidate="">
                        <div class="mb-3">
                            <label for="Name">Name</label>
                            <input type="text" class="form-control" id="Name" placeholder="" value="@Model.OrderedBy.Name" required="">
                        </div>

                        <div class="mb-3">
                            <label for="Email">Email <span class="text-muted">(Optional)</span></label>
                            <input type="Email" class="form-control" id="Email" value="you@example.com" placeholder="@Model.OrderedBy.Email">
                        </div>

                        <div class="mb-3">
                            <label for="Address">Address</label>
                            <input type="text" class="form-control" id="Address" value="1234 Cairo" placeholder="@Model.OrderedBy.Address" required="">
                        </div>

                        <div class="mb-3">
                            <label for="Status">Status</label>
                            <select name="Status" id="ChangeStatus">
                                @foreach (var Status in Model.AvailableStatus)
                                {
                                    var IsSelected = Status == Model.Order.Status;
                                    <option @(IsSelected ? "selected" : string.Empty)>@Status</option>
                                }
                            </select>
                        </div>
                    </form>
                </div>
            </div>
        </div><!-- /.container -->
    </div><!-- /.page-title -->
<script>
    $("#ChangeStatus").change(function () {
		$.ajax({
			url: '@Url.Action("ChangeStatus", "Order")',
			data: {
                status: $("#ChangeStatus").val(),
				ID: '@Model.Order.ID'
			}
		})
        .done(function (response) {
        	if(response.Success)
        	{
        		swal("Done", "Your Order has been updated.", "success");
        	}
        	else {
        		swal("Error", "Unable to update Order", "warning");
        	}
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});
</script>
}
else
{
 <div>
     <b>Order Details Not Available.</b>
 </div>
}